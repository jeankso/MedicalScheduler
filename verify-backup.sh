#!/bin/bash

# Script de Verifica√ß√£o de Backup
# Sistema de Requisi√ß√µes de Sa√∫de - Alexandria/RN

set -e

echo "=========================================="
echo "VERIFICA√á√ÉO DE BACKUP - ALEXANDRIA/RN"
echo "=========================================="
echo "Data: $(date +"%Y-%m-%d %H:%M:%S")"
echo ""

# Encontrar o backup mais recente
BACKUP_DIR="./backups"
if [ ! -d "$BACKUP_DIR" ]; then
    echo "‚ùå Diret√≥rio de backup n√£o encontrado: $BACKUP_DIR"
    exit 1
fi

LATEST_BACKUP=$(ls -t "${BACKUP_DIR}"/alexandria_health_clean_*.sql 2>/dev/null | head -n1)

if [ -z "$LATEST_BACKUP" ]; then
    echo "‚ùå Nenhum backup limpo encontrado!"
    echo "Execute primeiro: ./backup-clean.sh"
    exit 1
fi

echo "Verificando backup: $LATEST_BACKUP"
echo ""

# Verificar se o arquivo existe e n√£o est√° vazio
if [ ! -s "$LATEST_BACKUP" ]; then
    echo "‚ùå Arquivo de backup est√° vazio ou n√£o existe!"
    exit 1
fi

# Mostrar informa√ß√µes do arquivo
FILE_SIZE=$(du -h "$LATEST_BACKUP" | cut -f1)
LINE_COUNT=$(wc -l < "$LATEST_BACKUP")

echo "‚úÖ Informa√ß√µes do Backup:"
echo "   Arquivo: $LATEST_BACKUP"
echo "   Tamanho: $FILE_SIZE"
echo "   Linhas: $LINE_COUNT"
echo ""

# Verificar conte√∫do essencial
echo "üîç Verificando conte√∫do essencial..."

TABLES_FOUND=0
ESSENTIAL_TABLES=("users" "patients" "requests" "health_units" "exam_types" "consultation_types")

for table in "${ESSENTIAL_TABLES[@]}"; do
    if grep -q "CREATE TABLE.*$table" "$LATEST_BACKUP"; then
        echo "   ‚úÖ Tabela '$table' encontrada"
        ((TABLES_FOUND++))
    else
        echo "   ‚ùå Tabela '$table' N√ÉO encontrada"
    fi
done

echo ""

# Verificar dados essenciais
echo "üîç Verificando dados essenciais..."

if grep -q "INSERT INTO.*users" "$LATEST_BACKUP"; then
    USER_COUNT=$(grep -c "INSERT INTO.*users" "$LATEST_BACKUP" || echo "0")
    echo "   ‚úÖ Usu√°rios: $USER_COUNT registros"
else
    echo "   ‚ùå Nenhum dado de usu√°rios encontrado"
fi

if grep -q "INSERT INTO.*patients" "$LATEST_BACKUP"; then
    PATIENT_COUNT=$(grep -c "INSERT INTO.*patients" "$LATEST_BACKUP" || echo "0")
    echo "   ‚úÖ Pacientes: $PATIENT_COUNT registros"
else
    echo "   ‚ùå Nenhum dado de pacientes encontrado"
fi

if grep -q "INSERT INTO.*requests" "$LATEST_BACKUP"; then
    REQUEST_COUNT=$(grep -c "INSERT INTO.*requests" "$LATEST_BACKUP" || echo "0")
    echo "   ‚úÖ Requisi√ß√µes: $REQUEST_COUNT registros"
else
    echo "   ‚ùå Nenhum dado de requisi√ß√µes encontrado"
fi

echo ""

# Verificar se n√£o h√° refer√™ncias espec√≠ficas do Neon
echo "üîç Verificando limpeza (sem depend√™ncias Neon)..."

if grep -qi "neon" "$LATEST_BACKUP"; then
    echo "   ‚ö†Ô∏è  Aviso: Refer√™ncias 'neon' encontradas no backup"
    NEON_COUNT=$(grep -ci "neon" "$LATEST_BACKUP")
    echo "      Total de ocorr√™ncias: $NEON_COUNT"
else
    echo "   ‚úÖ Backup limpo - nenhuma refer√™ncia Neon encontrada"
fi

if grep -q "ep-sparkling-hat" "$LATEST_BACKUP"; then
    echo "   ‚ùå Refer√™ncias espec√≠ficas do servidor Neon encontradas"
else
    echo "   ‚úÖ Nenhuma refer√™ncia espec√≠fica do servidor encontrada"
fi

echo ""

# Resumo final
echo "=========================================="
echo "RESULTADO DA VERIFICA√á√ÉO"
echo "=========================================="

if [ $TABLES_FOUND -eq ${#ESSENTIAL_TABLES[@]} ]; then
    echo "‚úÖ BACKUP V√ÅLIDO"
    echo "   - Todas as tabelas essenciais presentes"
    echo "   - Dados encontrados"
    echo "   - Arquivo pronto para importa√ß√£o"
    echo ""
    echo "üìã Instru√ß√µes para usar o backup:"
    echo "   1. Copiar arquivo para servidor de destino"
    echo "   2. Criar banco: CREATE DATABASE alexandria_health;"
    echo "   3. Importar: psql -d alexandria_health < $(basename "$LATEST_BACKUP")"
    echo ""
else
    echo "‚ùå BACKUP INCOMPLETO"
    echo "   - Faltam $(( ${#ESSENTIAL_TABLES[@]} - TABLES_FOUND )) tabelas essenciais"
    echo "   - Execute novamente o backup-clean.sh"
fi

echo "Verifica√ß√£o conclu√≠da."